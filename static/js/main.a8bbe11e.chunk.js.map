{"version":3,"sources":["components/MapConsoleOutput.jsx","components/Prompt.jsx","components/commands/Twitter.jsx","components/commands/Linkedin.jsx","components/commands/Instagram.jsx","components/commands/Github.jsx","components/commands/Contact.jsx","components/commands/Help.jsx","components/commands/About.jsx","components/commands/Website.jsx","components/Terminal.jsx","App.js","index.js"],"names":["MapConsoleOutput","consoleOutput","scrollRef","React","useRef","useEffect","current","scrollTop","scrollHeight","className","ref","map","item","key","Prompt","class","Twitter","href","Linkedin","Instagram","Github","Help","About","Contact","Terminal","inputText","useState","input","setInput","terminalOutput","setTerminalOutput","historyCommands","setHistoryCommands","historyCommandsPosition","setHistoryComandsPosition","functionCommands","printCommands","commandsMap","twitter","linkedin","instagram","github","website","Website","contact","about","help","focus","selectionEnd","value","length","scrollIntoView","isPrintCommand","command","includes","isFunctionCommand","getCommandFromHistory","handleKeyDown","e","commandRecord","element","preventDefault","trim","matchedCommands","validCommands","push","filter","c","startsWith","autocompleteCommand","join","commando","commando2","console","log","error","allCommands","Object","keys","path","fileName","a","document","createElement","download","click","downloadFile","tabIndex","onKeyDown","type","onChange","target","bannerCondensed","Date","getFullYear","App","banner","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8bbe11e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MapConsoleOutput = ({ consoleOutput }) => {\n  const scrollRef = React.useRef();\n  \n\n  React.useEffect(() => {\n    if (scrollRef.current)\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      \n  });\n\n  return (\n    <div className=\"console-output\" ref={scrollRef}>\n      {/* const outputList = props.outputs.map((o, key) => <div key={key}>{o}</div>); */}\n      {consoleOutput.map((item, key) => (\n        <div key={key}>\n          {item}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MapConsoleOutput;","import React from \"react\";\n\n// This is the prompt with the user and a symbol separating them.\n\nconst Prompt = () => <div>\n                            {/* <span>user@juanallegretti.com&nbsp;➜</span> */}\n                            {/* <span class=\"terminal-prompt-arrow\"><b>➜</b></span><span class=\"terminal-prompt-text\">&nbsp;<b>~</b>&nbsp;user@juanallegretti.com&nbsp;</span> */}\n                            <span class=\"terminal-prompt-arrow\">➜</span><span class=\"terminal-prompt-text\">&nbsp;~&nbsp;user@juanallegretti.com&nbsp;</span>\n\n                        </div>;\n\nexport default Prompt;","import React from \"react\";\n\nconst Twitter = () => <div>My Twitter account iiiiiis <a href=\"https://www.twitter.com/juanallegretti\">@JuanAllegretti</a></div>;\n\nexport default Twitter;","import React from \"react\";\n\nconst Linkedin = () => <div>My Linkedin account: <a href=\"https://www.linkedin.com/in/juanallegretti\">@JuanAllegretti</a></div>;\n\nexport default Linkedin;","import React from \"react\";\n\nconst Instagram = () => <div>My Instagram account is <a href=\"https://www.instagram.com/juan.allgretti\">@Juan.Allegretti</a></div>;\n\nexport default Instagram;","import React from \"react\";\n\nconst Github = () => <div>My GitHub repo is <a href=\"https://github.com/Juan-Allegretti\">@Juan-Allegretti</a></div>;\n\nexport default Github;","import React from \"react\";\n\nconst Prompt = () => <dl>\n<dt>Email</dt>\n<dd>\n  <a href=\"mailto:juan.elca@gmail.com\">juan.elca@gmail.com</a>\n</dd>\n<dt>Linkedin</dt>\n<dd>My Linkedin account is <a href=\"https://www.linkedin.com/in/juanallegretti\">@JuanAllegretti</a></dd>\n\n</dl>;\n\nexport default Prompt;","import React from \"react\";\n\nconst Help = () => <div>\n<p>\nYou can use any of the following commands. You can also browse your command history\nwith ArrowUp or ArrowDown and press Tab to autocomplete.\n</p>\n<dl>\n  <dt>about</dt>\n  <dd>A description about me</dd>\n  <dt>github</dt>\n  <dd>Where to find my code</dd>\n  <dt>twitter</dt>\n  <dd>My Twitter profile</dd>\n  <dt>instagram</dt>\n  <dd>My Instagram profile</dd>\n  <dt>download_cv</dt>\n  <dd>Check out my CV [pdf - 168KB]</dd>\n  <dt>contact</dt>\n  <dd>How to reach me</dd>\n  <dt>website</dt>\n  <dd>How I built this</dd>\n  <dt>all</dt>\n  <dd>Run all commands</dd>\n  <dt>clear</dt>\n  <dd>Clears the terminal output</dd>\n</dl>\n</div>;\n\nexport default Help;","import React from \"react\";\n\nconst About = () => <div>I'm a 28 years old <span className=\"terminal-glow\">Computer Engineer</span> graduated from <a href=\"https://www.unlam.edu.ar/\">Universidad Nacional de La Matanza</a> in Buenos Aires, Argentina</div>;\n\nexport default About;","import React from \"react\";\n\nconst Contact = () => <div>I built this personal website using React.js to practice this technology.\nThe source code is on my <a href=\"https://github.com/Juan-Allegretti\">GitHub</a></div>;\n\nexport default Contact;","import React from \"react\";\nimport MapConsoleOutput from \"./MapConsoleOutput\";\nimport Prompt from \"./Prompt\";\nimport Twitter from \"./commands/Twitter\";\nimport Linkedin from \"./commands/Linkedin\";\nimport Instagram from \"./commands/Instagram\";\nimport Github from \"./commands/Github\";\nimport Contact from \"./commands/Contact\";\nimport Help from \"./commands/Help\";\nimport About from \"./commands/About\";\nimport Website from \"./commands/Website\";\n\n\n\nconst Terminal = () => {\n  const inputText = React.useRef();\n  const scrollRef = React.useRef();\n  \n  const [input, setInput] = React.useState(\"\");\n  // const [consoleOutput, onEnter] = UseOnEnter();\n  // const [output, setOutput] = React.useState('')\n  const [terminalOutput, setTerminalOutput] = React.useState([]);\n  \n  //Store executed to use as a history\n  const [historyCommands, setHistoryCommands] = React.useState([]);\n  const [historyCommandsPosition, setHistoryComandsPosition] = React.useState(0);\n\n\n  \n  const banner =\n\n  \"   _                           _ _                     _   _   _ \\n\" +\n  \"  (_)_   _  __ _ _ __     __ _| | | ___  __ _ _ __ ___| |_| |_(_)\\n\" +\n  \"  | | | | |/ _` | '_ \\\\   / _` | | |/ _ \\\\/ _` | '__/ _ \\\\ __| __| |\\n\" +\n  \"  | | |_| | (_| | | | | | (_| | | |  __/ (_| | | |  __/ |_| |_| |\\n\" +\n  \" _/ |\\\\__,_|\\\\__,_|_| |_|  \\\\__,_|_|_|\\\\___|\\\\__, |_|  \\\\___|\\\\__|\\\\__|_|\\n\" +\n  \"|__/                                    |___/                    \\n\"\n  \n\n  const pCommands = {\n    help: (\n      <div>\n      <p>\n      You can use any of the following commands. You can also browse your command history\n      with ArrowUp or ArrowDown and press Tab to autocomplete.\n      </p>\n      <dl>\n        <dt>about</dt>\n        <dd>A description about me</dd>\n        <dt>github</dt>\n        <dd>Where to find my code</dd>\n        <dt>twitter</dt>\n        <dd>My Twitter profile</dd>\n        <dt>instagram</dt>\n        <dd>My Instagram profile</dd>\n        <dt>download_cv</dt>\n        <dd>Check out my CV [pdf - 168KB]</dd>\n        <dt>contact</dt>\n        <dd>How to reach me</dd>\n        <dt>website</dt>\n        <dd>How I built this</dd>\n        <dt>all</dt>\n        <dd>Run all commands</dd>\n        <dt>clear</dt>\n        <dd>Clears the terminal output</dd>\n      </dl>\n    </div>\n    ),\n    website: <div>I built this personal website using React.js to practice this technology.\n    The source code is on my <a href=\"https://github.com/Juan-Allegretti\">GitHub</a></div>,\n    twitter: <div>My Twitter account is <a href=\"https://www.twitter.com/juanallegretti\">@JuanAllegretti</a></div>,\n    github: <div>My GitHub repo is <a href=\"https://github.com/Juan-Allegretti\">@Juan-Allegretti</a></div>,\n    linkedin: <div>My Linkedin account is <a href=\"https://www.linkedin.com/in/juanallegretti\">@JuanAllegretti</a></div>,\n    instagram: <div>My Instagram account is <a href=\"https://www.instagram.com/juan.allgretti\">@Juan.Allegretti</a></div>,\n    contact: (\n      <dl>\n      <dt>Email</dt>\n      <dd>\n        <a href=\"mailto:juan.elca@gmail.com\">juan.elca@gmail.com</a>\n      </dd>\n      <dt>Linkedin</dt>\n     <dd>My Linkedin account is <a href=\"https://www.linkedin.com/in/juanallegretti\">@JuanAllegretti</a></dd>\n\n    </dl>\n    ),\n    about: <div>I'm a 28 years old <span className=\"terminal-glow\">Computer Engineer</span> graduated from <a href=\"https://www.unlam.edu.ar/\">Universidad Nacional de La Matanza</a> in Buenos Aires, Argentina</div>\n  };\n\n  const functionCommands = [\"clear\", \"all\", \"cv\"]\n  \n  const printCommands = [\"twitter\",  \"linkedin\", \"github\", \"instagram\", \"website\", \"contact\", \"about\", \"help\"];\n\n  const commandsMap = {\n    twitter: <Twitter />,\n    linkedin: <Linkedin />,\n    instagram: <Instagram />,\n    github: <Github />,\n    website: <Website />,\n    contact: <Contact />,\n    about: <About />,\n    help: <Help />\n  };\n\n\n  \n\n  React.useEffect(() => {\n    // inputText.current.value = \"\";\n    inputText.current.focus();\n    // inputText.current.selectionStart = inputText.current.value.length;\n    inputText.current.selectionEnd = inputText.current.value.length;\n    scrollRef.current?.scrollIntoView();\n  });\n\n  const isValidCommand = (command) => {\n    return isPrintCommand(command) || isFunctionCommand(command);\n  };\n\n  const isPrintCommand = (command) => {\n    return printCommands.includes(command);\n  };\n\n  const isFunctionCommand = (command) => {\n    return functionCommands.includes(command);\n  };\n\n// Download a file from the path received and name it as the file name received\n  const downloadFile = (path, fileName) => {\n    const a = document.createElement(\"a\");\n    a.href = path;\n    a.download = fileName;\n    a.click();\n  };\n\n\n//Try to autocomplete the command from the input and return the matched commands\n  \n  const autocompleteCommand = (command) => {\n    // const commands = Object.keys(printCommands);\n    const validCommands = printCommands\n    validCommands.push(...functionCommands);\n    const matchedCommands = validCommands.filter((c) => c.startsWith(command));\n    return matchedCommands;\n  };\n\n//Navigate through the history of commands\n  const getCommandFromHistory = (key) => {\n    if (key === \"ArrowUp\") {\n      if (historyCommands.length > 0 && (historyCommands.length) > historyCommandsPosition) {\n        setHistoryComandsPosition(historyCommandsPosition + 1);\n        return historyCommands[historyCommands.length - historyCommandsPosition -1 ];\n\n      } else{\n        return historyCommands[historyCommands.length - historyCommandsPosition];\n      }\n    } else if (key === \"ArrowDown\") {\n      if (historyCommands.length > 0 && historyCommandsPosition > 1) {\n        setHistoryComandsPosition(historyCommandsPosition - 1);\n        return historyCommands[historyCommands.length - historyCommandsPosition + 1];\n\n      } else if(historyCommandsPosition <= 1){\n        setHistoryComandsPosition(0);\n        return \"\";\n\n      }\n    }\n  }\n\n\n\n  const handleKeyDown = (value, e) => {\n    const terminalPrompt = \"user@juanallegretti.com$\"\n    const commandRecord = (\n      <div\n      ref={(element) => (scrollRef.current = element)}\n        className=\"terminal-command-record\"\n      >\n        {/* <span className=\"terminal-prompt\">{terminalPrompt}</span>{\"\"} */}\n        <span className=\"terminal-prompt\"><Prompt />{\" \"}{value}</span>\n        {/* <span>{value}</span> */}\n      </div>\n    );\n    \n\n    switch(e.key){\n        case \"Tab\":\n            e.preventDefault();\n            if (input.trim() !== \"\") {\n            const matchedCommands = autocompleteCommand(value);\n            if (matchedCommands.length === 1) {\n              setInput(matchedCommands[0]);\n            }\n            //If there are more than one matched commands, print in the console the matched commands. If there are no matched commands, do nothing\n            else if (matchedCommands.length > 1 && matchedCommands != -1) {\n              setTerminalOutput([...terminalOutput, commandRecord, matchedCommands.join(\"     \")]);\n            }\n          }\n              break;\n        case \"ArrowUp\":\n            e.preventDefault();\n            const commando = getCommandFromHistory(e.key);\n            setInput(commando);\n            break;\n        case \"ArrowDown\":\n            e.preventDefault();\n            const commando2 = getCommandFromHistory(e.key);\n            setInput(commando2);\n            break;\n        case \"Enter\":\n          e.preventDefault();\n          setHistoryComandsPosition(0);\n          setInput(\"\");\n          // Check if input is empty or has whitespaces\n          if (value.trim() == \"\") {\n            // Set the output empty and don't add to history\n          setTerminalOutput([...terminalOutput,  commandRecord]);\n          break;\n          }\n          // Store command in history\n          setHistoryCommands([...historyCommands, value]);\n          \n          if (!isValidCommand(value)){\n            console.log(\"Errror bokeeee\");\n            const error = (\n              <div className=\"terminal-error-group\">\n                <span className=\"terminal-error\">\n                  {`command not found: ${value}`}\n                </span>\n                <span>{`Type 'help' to view a list of available commands`}</span>\n              </div>\n            );\n    \n            setTerminalOutput([...terminalOutput,  commandRecord, error]);\n            break;\n            // return setTerminalOutput\n          }\n          else if (isPrintCommand(value)) {\n                        \n            setTerminalOutput([...terminalOutput,  commandRecord, commandsMap[value]]);\n            setInput(\"\");\n\n          }\n          else if (isFunctionCommand(value)) {\n            switch(value){\n              case \"clear\":\n                setTerminalOutput([]);\n                setInput(\"\");\n                // return setTerminalOutput\n                break;\n              case \"all\":\n\n                // Get the keys of the object printCommands in an array and print it in the terminal\n                const keys = Object.keys(printCommands);\n\n                const allCommands = keys.map((key) => {\n                  const printAll = (\n                    <>\n                    <div>\n                      <span>{\"- \"}<b>{key}</b></span>{\":\"}\n                    </div>\n                    <div className=\"terminal-command-output\">\n                    <span>{printCommands[key]}</span>\n                    </div>\n                    </>\n                  )\n                  return printAll;\n\n                });\n                setTerminalOutput([...terminalOutput,  commandRecord,  ...allCommands]);                \n                setInput(\"\");\n                // return setTerminalOutput\n                break;\n              case \"cv\":\n                // Download de CV file\n                downloadFile(\"CV.txt\", \"Juan\");\n                setInput(\"\");\n                break;\n            }\n            // setTerminalOutput([...terminalOutput,  commandRecord, printCommands[value]]);\n            // setInput(\"\");\n            // return setTerminalOutput\n          }\n\n    }\n  };\n\n\n\n  return (\n    //This is the terminal component and it's the only one that has the focus    \n\n    <div className=\"terminal-container\" tabIndex={-1} onKeyDown={(e) => { if (e.key === \"Tab\") e.preventDefault() }}>\n      <div className=\"terminal-content\">\n      <div className=\"terminal-banner\">{banner}</div>\n      <MapConsoleOutput consoleOutput={terminalOutput} />\n      <div className=\"terminal-input-area\">\n      <Prompt />\n        <input\n        type=\"text\"\n        ref={inputText}\n        className=\"terminal-input\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyDown={(e) => handleKeyDown(input, e)}\n\n        />\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Terminal;","import React from 'react';\nimport Terminal from './components/Terminal.jsx';\nimport \"./App.css\";\n\n\nconst getYear = () => {\n  return new Date().getFullYear();\n};\n\nconst bannerCondensed =\n  \"             _         __     _    _                 \\n\" +\n  \" __ _ _ __ _(_)__ _   / _|___| |__| |_ __  __ _ _ _  \\n\" +\n  \"/ _| '_/ _` | / _` | |  _/ -_) / _` | '  \\\\/ _` | ' \\\\ \\n\" +\n  \"\\\\__|_| \\\\__,_|_\\\\__, | |_| \\\\___|_\\\\__,_|_|_|_\\\\__,_|_||_|\\n \" +\n  \"             |___/                                  \\n\" +\n  \"  \\u00A9 \" +\n  getYear();\n\n\n\nfunction App() {\n  return (\n      <Terminal\n      banner={bannerCondensed}\n      />\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}